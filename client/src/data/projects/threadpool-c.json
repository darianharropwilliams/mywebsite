{
    "title": "Threadpool Library",
    "summary": "Developed a lightweight threadpool in C that queues tasks and runs them in parallel across multiple threads.",
    "tech": ["C", "Concurrency", "Threading"],
    "image": "/logo512.png",
    "slug": "threadpool-c",
    "date": "Fall 2023",
    "featured": false,
    "description": {
      "situation": "Efficiently managing concurrent tasks requires a strong understanding of threading models.",
      "task": "I aimed to build a reusable threadpool in C to handle asynchronous tasks with minimal overhead.",
      "action": "I implemented a job queue, condition variables, and a clean shutdown mechanism across multiple threads.",
      "result": "The threadpool proved reliable in performance testing and helped abstract away complex concurrency issues."
    },
    "challenges": [
      "Preventing race conditions and deadlocks during task execution.",
      "Efficiently signaling idle threads and managing queues."
    ],
    "contributions": [
      "Built task queues and worker thread system with semaphores.",
      "Designed a clean threadpool API for easy integration.",
      "Stress tested under load with mock workloads."
    ],
    "links": []
  }
  